class Solution {
    public int countVowelStrings(int n) {
        int arr[] = new int[]{1,1,1,1,1};
        if(n == 1){
            return 5;
        }

        return count(arr, n);
    }

    private int count(int prev[], int n){  //need to understand the pattern since each level depends on the previous one.
    //1 -> 1 1 1 1 1
    //2 -> 5 4 3 2 1
    //3 -> 15 10 6 3 1
    //4 -> ...........
    //pattern =>arr[n] = sum(prev[n] + prev[n-1] + .... + prev[0]);

        if(n == 1){
            int sum =0;
            for(int p : prev){
                sum+= p;
            }
            return sum;
        }

        int arr[] = new int[5];
        for(int i=0; i<arr.length; i++){
            int sum = 0;
            for(int j=i; j<arr.length; j++){
                sum += prev[j];
            }
            arr[i] = sum;
        }

        return count(arr, n-1);
    }
}